rotpcalist$values[1]
rotpcalist$values[2]
rotpcalist$values[3]
rotpcalist$values[1]
fac1 <- sqrt(rotpcalist$values[1])
fac2 <- sqrt(rotpcalist$values[2])
fdmat <- eval.fd(x, harmfd)
fdmat
edit(plot.pca.fd())
edit(plot.pca.fd
)
PC1_df = data.frame(matrix(nrow=80))
PC2_df = data.frame(matrix(nrow=80))
mean_df = data.frame(matrix(nrow=80))
node.df = node.scaler(patient5, 2, k=32)
node.df = as.matrix(row.check(node.df))
rotpcalist = fPCA.nodes(data_mat=node.df, k=11, nharm=2, plt=0)
# PC1 & PC2
harmfd <- rotpcalist[[1]]
basisfd <- harmfd$basis
rangex <- basisfd$rangeval
x <- seq(rangex[1], rangex[2], length = harmfd$basis$rangeval[2])
meanmat <- eval.fd(x, rotpcalist$meanfd)
fdmat <- eval.fd(x, harmfd)
fac1 <- sqrt(rotpcalist$values[1])
fac2 <- sqrt(rotpcalist$values[2])
PC1_df[,ncol(PC1_df)+1]=2*fac1*fdmat[,1]
PC2_df[,ncol(PC2_df)+1]=2*fac2*fdmat[,2]
mean_df[,ncol(mean_df)+1]=meanmat
PC1_df = data.frame(PC1_df[,2:(ncol(PC1_df))])
PC2_df = data.frame(PC2_df[,2:(ncol(PC2_df))])
mean_df = data.frame(mean_df[,2:(ncol(mean_df))])
z_1 = read.zoo(PC1_df, index='index')
### PC2
z_2 = read.zoo(PC2_df, index='index')
### Mean Functional Curves
z_3 = read.zoo(mean_df, index='index')
autoplot(z_1, facet = NULL, main='PC1')
autoplot(z_2, facet = NULL, main='PC2')
fac1
fac2
edit(plot.pca.fd
)
a = node.scaler(patient5, node=c(2))
b = row.check(node_data=a)
b = read.zoo(b, index='index')
autoplot(b, facet = NULL, main='Patient 5, Node 2')
rotpcalist = fPCA.nodes(as.matrix(b), k=11, nharm=2, plt=1)
node1 = Wave(patient5[,1], register=1)
ggplot(node1, aes(time, y_value,group=cycle, colour=cycle)) + geom_line() + theme(legend.position="right")+ggtitle("Patient 1, Node 1")
a = node.scaler(patient5, node=c(2))
a = node.scaler(patient5, node=c(1))
b = row.check(node_data=a)
b = read.zoo(b, index='index')
autoplot(b, facet = NULL, main='Patient 5, Node 2')
rotpcalist = fPCA.nodes(as.matrix(b), k=11, nharm=2, plt=1)
a = node.scaler(patient5, node=c(1))
b = row.check(node_data=a)
b = read.zoo(b, index='index')
autoplot(b, facet = NULL, main='Patient 5, Node 1')
rotpcalist = fPCA.nodes(as.matrix(b), k=11, nharm=2, plt=1)
node.df = node.scaler(patient5, node=1, k=32)
PC1_df = data.frame(matrix(nrow=80))
PC2_df = data.frame(matrix(nrow=80))
mean_df = data.frame(matrix(nrow=80))
node.df = node.scaler(patient5, node=1, k=32)
node.df = as.matrix(row.check(node.df))
rotpcalist = fPCA.nodes(data_mat=node.df, k=11, nharm=2, plt=0)
# PC1 & PC2
harmfd <- rotpcalist[[1]]
basisfd <- harmfd$basis
rangex <- basisfd$rangeval
x <- seq(rangex[1], rangex[2], length = harmfd$basis$rangeval[2])
meanmat <- eval.fd(x, rotpcalist$meanfd)
fdmat <- eval.fd(x, harmfd)
fac1 <- sqrt(rotpcalist$values[1])
fac2 <- sqrt(rotpcalist$values[2])
PC1_df[,ncol(PC1_df)+1]=2*fac1*fdmat[,1]
PC2_df[,ncol(PC2_df)+1]=2*fac2*fdmat[,2]
mean_df[,ncol(mean_df)+1]=meanmat
PC1_df = data.frame(PC1_df[,2:(ncol(PC1_df))])
PC2_df = data.frame(PC2_df[,2:(ncol(PC2_df))])
mean_df = data.frame(mean_df[,2:(ncol(mean_df))])
z_1 = read.zoo(PC1_df, index='index')
### PC2
z_2 = read.zoo(PC2_df, index='index')
### Mean Functional Curves
z_3 = read.zoo(mean_df, index='index')
autoplot(z_1, facet = NULL, main='Variance on PC1')
autoplot(z_2, facet = NULL, main='Variance on PC2')
node1 = Wave(patient9[,1], register=1)
ggplot(node1, aes(time, y_value,group=cycle, colour=cycle)) + geom_line() + theme(legend.position="right")+ggtitle("Patient 1, Node 1")
a = node.scaler(patient9, node=c(1))
b = row.check(node_data=a)
b = read.zoo(b, index='index')
autoplot(b, facet = NULL, main='Patient 9, Node 1')
autoplot(b, facet = NULL, main='Patient 9, Node 1')
node1 = Wave(patient9[,1], register=0)
ggplot(node1, aes(time, y_value,group=cycle, colour=cycle)) + geom_line() + theme(legend.position="right")+ggtitle("Patient 1, Node 1")
node1 = Wave(patient9[,1], register=1)
ggplot(node1, aes(time, y_value,group=cycle, colour=cycle)) + geom_line() + theme(legend.position="right")+ggtitle("Patient 1, Node 1")
a = node.scaler(patient9, node=c(1))
b = row.check(node_data=a)
b = read.zoo(b, index='index')
autoplot(b, facet = NULL, main='Patient 9, Node 1')
ggplot(node1, aes(time, y_value,group=cycle, colour=cycle)) + geom_line() + theme(legend.position="right")+ggtitle("Patient 1, Node 1")
autoplot(b, facet = NULL, main='Patient 9, Node 1')
rotpcalist = fPCA.nodes(as.matrix(b), k=11, nharm=2, plt=1)
PC1_df = data.frame(matrix(nrow=80))
PC2_df = data.frame(matrix(nrow=80))
mean_df = data.frame(matrix(nrow=80))
node.df = node.scaler(patient9, node=1, k=32)
node.df = as.matrix(row.check(node.df))
rotpcalist = fPCA.nodes(data_mat=node.df, k=11, nharm=2, plt=0)
# PC1 & PC2
harmfd <- rotpcalist[[1]]
basisfd <- harmfd$basis
rangex <- basisfd$rangeval
x <- seq(rangex[1], rangex[2], length = harmfd$basis$rangeval[2])
meanmat <- eval.fd(x, rotpcalist$meanfd)
fdmat <- eval.fd(x, harmfd)
fac1 <- sqrt(rotpcalist$values[1])
fac2 <- sqrt(rotpcalist$values[2])
PC1_df[,ncol(PC1_df)+1]=2*fac1*fdmat[,1]
PC2_df[,ncol(PC2_df)+1]=2*fac2*fdmat[,2]
mean_df[,ncol(mean_df)+1]=meanmat
PC1_df = data.frame(PC1_df[,2:(ncol(PC1_df))])
PC2_df = data.frame(PC2_df[,2:(ncol(PC2_df))])
mean_df = data.frame(mean_df[,2:(ncol(mean_df))])
z_1 = read.zoo(PC1_df, index='index')
### PC2
z_2 = read.zoo(PC2_df, index='index')
### Mean Functional Curves
z_3 = read.zoo(mean_df, index='index')
autoplot(z_1, facet = NULL, main='Variance on PC1')
autoplot(z_2, facet = NULL, main='Variance on PC2')
PC1_df = data.frame(matrix(nrow=80))
PC2_df = data.frame(matrix(nrow=80))
mean_df = data.frame(matrix(nrow=80))
node.df = node.scaler(patient28, node=1, k=32)
node.df = as.matrix(row.check(node.df))
rotpcalist = fPCA.nodes(data_mat=node.df, k=11, nharm=2, plt=0)
# PC1 & PC2
harmfd <- rotpcalist[[1]]
basisfd <- harmfd$basis
rangex <- basisfd$rangeval
x <- seq(rangex[1], rangex[2], length = harmfd$basis$rangeval[2])
meanmat <- eval.fd(x, rotpcalist$meanfd)
fdmat <- eval.fd(x, harmfd)
fac1 <- sqrt(rotpcalist$values[1])
fac2 <- sqrt(rotpcalist$values[2])
PC1_df[,ncol(PC1_df)+1]=2*fac1*fdmat[,1]
PC2_df[,ncol(PC2_df)+1]=2*fac2*fdmat[,2]
mean_df[,ncol(mean_df)+1]=meanmat
PC1_df = data.frame(PC1_df[,2:(ncol(PC1_df))])
PC2_df = data.frame(PC2_df[,2:(ncol(PC2_df))])
mean_df = data.frame(mean_df[,2:(ncol(mean_df))])
z_1 = read.zoo(PC1_df, index='index')
### PC2
z_2 = read.zoo(PC2_df, index='index')
### Mean Functional Curves
z_3 = read.zoo(mean_df, index='index')
autoplot(z_1, facet = NULL, main='Variance on PC1')
PC1_df = data.frame(matrix(nrow=80))
PC2_df = data.frame(matrix(nrow=80))
mean_df = data.frame(matrix(nrow=80))
for(node in 1:32){
node.df = node.scaler(patient28, node, k=32)
node.df = as.matrix(row.check(node.df))
rotpcalist = fPCA.nodes(data_mat=node.df, k=11, nharm=2, plt=0)
# PC1 & PC2
harmfd <- rotpcalist[[1]]
basisfd <- harmfd$basis
rangex <- basisfd$rangeval
x <- seq(rangex[1], rangex[2], length = harmfd$basis$rangeval[2])
meanmat <- eval.fd(x, rotpcalist$meanfd)
fdmat <- eval.fd(x, harmfd)
fac1 <- sqrt(rotpcalist$values[1])
fac2 <- sqrt(rotpcalist$values[2])
PC1_df[,ncol(PC1_df)+1]=2*fac1*fdmat[,1]
PC2_df[,ncol(PC2_df)+1]=2*fac2*fdmat[,2]
mean_df[,ncol(mean_df)+1]=meanmat
}
PC1_df = data.frame(PC1_df[,2:(ncol(PC1_df))])
names(PC1_df)=colnames(patient1)
PC2_df = data.frame(PC2_df[,2:(ncol(PC2_df))])
names(PC2_df)=colnames(patient1)
mean_df = data.frame(mean_df[,2:(ncol(mean_df))])
names(mean_df)=colnames(patient1)
## plot
### PC1
z_1 = read.zoo(PC1_df, index='index')
### PC2
z_2 = read.zoo(PC2_df, index='index')
### Mean Functional Curves
z_3 = read.zoo(mean_df, index='index')
autoplot(z_1, facet = NULL, main='Patients 80, variance of all nodes on PC1')
PC1_df = data.frame(matrix(nrow=80))
PC2_df = data.frame(matrix(nrow=80))
mean_df = data.frame(matrix(nrow=80))
for(node in 1:32){
node.df = node.scaler(patient80, node, k=32)
node.df = as.matrix(row.check(node.df))
rotpcalist = fPCA.nodes(data_mat=node.df, k=11, nharm=2, plt=0)
# PC1 & PC2
harmfd <- rotpcalist[[1]]
basisfd <- harmfd$basis
rangex <- basisfd$rangeval
x <- seq(rangex[1], rangex[2], length = harmfd$basis$rangeval[2])
meanmat <- eval.fd(x, rotpcalist$meanfd)
fdmat <- eval.fd(x, harmfd)
fac1 <- sqrt(rotpcalist$values[1])
fac2 <- sqrt(rotpcalist$values[2])
PC1_df[,ncol(PC1_df)+1]=2*fac1*fdmat[,1]
PC2_df[,ncol(PC2_df)+1]=2*fac2*fdmat[,2]
mean_df[,ncol(mean_df)+1]=meanmat
}
PC1_df = data.frame(PC1_df[,2:(ncol(PC1_df))])
names(PC1_df)=colnames(patient1)
PC2_df = data.frame(PC2_df[,2:(ncol(PC2_df))])
names(PC2_df)=colnames(patient1)
mean_df = data.frame(mean_df[,2:(ncol(mean_df))])
names(mean_df)=colnames(patient1)
## plot
### PC1
z_1 = read.zoo(PC1_df, index='index')
### PC2
z_2 = read.zoo(PC2_df, index='index')
### Mean Functional Curves
z_3 = read.zoo(mean_df, index='index')
autoplot(z_1, facet = NULL, main='Patients 80, variance of all nodes on PC1')
PC1_df = data.frame(matrix(nrow=80))
PC2_df = data.frame(matrix(nrow=80))
mean_df = data.frame(matrix(nrow=80))
for(node in 1:32){
node.df = node.scaler(patient1, node, k=32)
node.df = as.matrix(row.check(node.df))
rotpcalist = fPCA.nodes(data_mat=node.df, k=11, nharm=2, plt=0)
# PC1 & PC2
harmfd <- rotpcalist[[1]]
basisfd <- harmfd$basis
rangex <- basisfd$rangeval
x <- seq(rangex[1], rangex[2], length = harmfd$basis$rangeval[2])
meanmat <- eval.fd(x, rotpcalist$meanfd)
fdmat <- eval.fd(x, harmfd)
fac1 <- sqrt(rotpcalist$values[1])
fac2 <- sqrt(rotpcalist$values[2])
PC1_df[,ncol(PC1_df)+1]=2*fac1*fdmat[,1]
PC2_df[,ncol(PC2_df)+1]=2*fac2*fdmat[,2]
mean_df[,ncol(mean_df)+1]=meanmat
}
PC1_df = data.frame(PC1_df[,2:(ncol(PC1_df))])
names(PC1_df)=colnames(patient1)
PC2_df = data.frame(PC2_df[,2:(ncol(PC2_df))])
names(PC2_df)=colnames(patient1)
mean_df = data.frame(mean_df[,2:(ncol(mean_df))])
names(mean_df)=colnames(patient1)
## plot
### PC1
z_1 = read.zoo(PC1_df, index='index')
### PC2
z_2 = read.zoo(PC2_df, index='index')
### Mean Functional Curves
z_3 = read.zoo(mean_df, index='index')
autoplot(z_1, facet = NULL, main='Patients 80, variance of all nodes on PC1')
PC1_df = data.frame(matrix(nrow=80))
PC2_df = data.frame(matrix(nrow=80))
mean_df = data.frame(matrix(nrow=80))
for(node in 1:32){
node.df = node.scaler(patient5, node, k=32)
node.df = as.matrix(row.check(node.df))
rotpcalist = fPCA.nodes(data_mat=node.df, k=11, nharm=2, plt=0)
# PC1 & PC2
harmfd <- rotpcalist[[1]]
basisfd <- harmfd$basis
rangex <- basisfd$rangeval
x <- seq(rangex[1], rangex[2], length = harmfd$basis$rangeval[2])
meanmat <- eval.fd(x, rotpcalist$meanfd)
fdmat <- eval.fd(x, harmfd)
fac1 <- sqrt(rotpcalist$values[1])
fac2 <- sqrt(rotpcalist$values[2])
PC1_df[,ncol(PC1_df)+1]=2*fac1*fdmat[,1]
PC2_df[,ncol(PC2_df)+1]=2*fac2*fdmat[,2]
mean_df[,ncol(mean_df)+1]=meanmat
}
PC1_df = data.frame(PC1_df[,2:(ncol(PC1_df))])
names(PC1_df)=colnames(patient1)
PC2_df = data.frame(PC2_df[,2:(ncol(PC2_df))])
names(PC2_df)=colnames(patient1)
mean_df = data.frame(mean_df[,2:(ncol(mean_df))])
names(mean_df)=colnames(patient1)
## plot
### PC1
z_1 = read.zoo(PC1_df, index='index')
### PC2
z_2 = read.zoo(PC2_df, index='index')
### Mean Functional Curves
z_3 = read.zoo(mean_df, index='index')
autoplot(z_1, facet = NULL, main='Patients 80, variance of all nodes on PC1')
PC1_df = data.frame(matrix(nrow=80))
PC2_df = data.frame(matrix(nrow=80))
mean_df = data.frame(matrix(nrow=80))
for(node in 1:32){
node.df = node.scaler(patient28, node, k=32)
node.df = as.matrix(row.check(node.df))
rotpcalist = fPCA.nodes(data_mat=node.df, k=11, nharm=2, plt=0)
# PC1 & PC2
harmfd <- rotpcalist[[1]]
basisfd <- harmfd$basis
rangex <- basisfd$rangeval
x <- seq(rangex[1], rangex[2], length = harmfd$basis$rangeval[2])
fdmat <- eval.fd(x, harmfd)
meanmat <- eval.fd(x, rotpcalist$meanfd)
fac1 <- sqrt(rotpcalist$values[1])
fac2 <- sqrt(rotpcalist$values[2])
PC1_df[,ncol(PC1_df)+1]=2*fac1*fdmat[,1]
PC2_df[,ncol(PC2_df)+1]=2*fac2*fdmat[,2]
mean_df[,ncol(mean_df)+1]=meanmat
}
PC1_df = data.frame(PC1_df[,2:(ncol(PC1_df))])
names(PC1_df)=colnames(patient1)
PC2_df = data.frame(PC2_df[,2:(ncol(PC2_df))])
names(PC2_df)=colnames(patient1)
mean_df = data.frame(mean_df[,2:(ncol(mean_df))])
names(mean_df)=colnames(patient1)
## plot
### PC1
z_1 = read.zoo(PC1_df, index='index')
### PC2
z_2 = read.zoo(PC2_df, index='index')
### Mean Functional Curves
z_3 = read.zoo(mean_df, index='index')
autoplot(z_1, facet = NULL, main='PC1')
fPCA.nodes(PC1_df, k=11, nharm=2, plt=1)
fPCA.nodes(as.matrix(PC1_df), k=11, nharm=2, plt=1)
PC1_df = data.frame(matrix(nrow=80))
PC2_df = data.frame(matrix(nrow=80))
mean_df = data.frame(matrix(nrow=80))
for(node in 1:32){
node.df = node.scaler(patient80, node, k=32)
node.df = as.matrix(row.check(node.df))
rotpcalist = fPCA.nodes(data_mat=node.df, k=11, nharm=2, plt=0)
# PC1 & PC2
harmfd <- rotpcalist[[1]]
basisfd <- harmfd$basis
rangex <- basisfd$rangeval
x <- seq(rangex[1], rangex[2], length = harmfd$basis$rangeval[2])
fdmat <- eval.fd(x, harmfd)
meanmat <- eval.fd(x, rotpcalist$meanfd)
fac1 <- sqrt(rotpcalist$values[1])
fac2 <- sqrt(rotpcalist$values[2])
PC1_df[,ncol(PC1_df)+1]=2*fac1*fdmat[,1]
PC2_df[,ncol(PC2_df)+1]=2*fac2*fdmat[,2]
mean_df[,ncol(mean_df)+1]=meanmat
}
PC1_df = data.frame(PC1_df[,2:(ncol(PC1_df))])
names(PC1_df)=colnames(patient1)
PC2_df = data.frame(PC2_df[,2:(ncol(PC2_df))])
names(PC2_df)=colnames(patient1)
mean_df = data.frame(mean_df[,2:(ncol(mean_df))])
names(mean_df)=colnames(patient1)
fPCA.nodes(PC1_df, k=11, 2, 1)
fPCA.nodes(as.matrix(PC1_df), k=11, 2, 1)
z <- read.csv(file_loc28, header=TRUE)
z <- read.zoo(z)
autoplot(z, facet = NULL, main='Patient 28')
PC1_df = data.frame(matrix(nrow=80))
PC2_df = data.frame(matrix(nrow=80))
mean_df = data.frame(matrix(nrow=80))
for(node in 1:32){
node.df = node.scaler(patient5, node, k=32)
node.df = as.matrix(row.check(node.df))
rotpcalist = fPCA.nodes(data_mat=node.df, k=11, nharm=2, plt=0)
# PC1 & PC2
harmfd <- rotpcalist[[1]]
basisfd <- harmfd$basis
rangex <- basisfd$rangeval
x <- seq(rangex[1], rangex[2], length = harmfd$basis$rangeval[2])
meanmat <- eval.fd(x, rotpcalist$meanfd)
fdmat <- eval.fd(x, harmfd)
fac1 <- sqrt(rotpcalist$values[1])
fac2 <- sqrt(rotpcalist$values[2])
PC1_df[,ncol(PC1_df)+1]=2*fac1*fdmat[,1]
PC2_df[,ncol(PC2_df)+1]=2*fac2*fdmat[,2]
mean_df[,ncol(mean_df)+1]=meanmat
}
PC1_df = data.frame(PC1_df[,2:(ncol(PC1_df))])
names(PC1_df)=colnames(patient1)
PC2_df = data.frame(PC2_df[,2:(ncol(PC2_df))])
names(PC2_df)=colnames(patient1)
mean_df = data.frame(mean_df[,2:(ncol(mean_df))])
names(mean_df)=colnames(patient1)
## plot
### PC1
z_1 = read.zoo(PC1_df, index='index')
### PC2
z_2 = read.zoo(PC2_df, index='index')
### Mean Functional Curves
z_3 = read.zoo(mean_df, index='index')
autoplot(z_1, facet = NULL, main='Patients 80, variance of all nodes on PC1')
autoplot(z_1, facet = NULL, main='Patients 80, variance of all nodes on PC1')
node1 = Wave(patient28[,1], register=1)
ggplot(node1, aes(time, y_value,group=cycle, colour=cycle)) + geom_line() + theme(legend.position="right")+ggtitle("Patient 1, Node 1")
a = node.scaler(patient9, node=c(1))
b = row.check(node_data=a)
b = read.zoo(b, index='index')
autoplot(b, facet = NULL, main='Patient 9, Node 1')
rotpcalist = fPCA.nodes(as.matrix(b), k=11, nharm=2, plt=1)
PC1_df = data.frame(matrix(nrow=80))
PC2_df = data.frame(matrix(nrow=80))
mean_df = data.frame(matrix(nrow=80))
node.df = node.scaler(patient28, node=1, k=32)
node.df = as.matrix(row.check(node.df))
rotpcalist = fPCA.nodes(data_mat=node.df, k=11, nharm=2, plt=0)
# PC1 & PC2
harmfd <- rotpcalist[[1]]
basisfd <- harmfd$basis
rangex <- basisfd$rangeval
x <- seq(rangex[1], rangex[2], length = harmfd$basis$rangeval[2])
meanmat <- eval.fd(x, rotpcalist$meanfd)
fdmat <- eval.fd(x, harmfd)
fac1 <- sqrt(rotpcalist$values[1])
fac2 <- sqrt(rotpcalist$values[2])
PC1_df[,ncol(PC1_df)+1]=2*fac1*fdmat[,1]
PC2_df[,ncol(PC2_df)+1]=2*fac2*fdmat[,2]
mean_df[,ncol(mean_df)+1]=meanmat
PC1_df = data.frame(PC1_df[,2:(ncol(PC1_df))])
PC2_df = data.frame(PC2_df[,2:(ncol(PC2_df))])
mean_df = data.frame(mean_df[,2:(ncol(mean_df))])
z_1 = read.zoo(PC1_df, index='index')
### PC2
z_2 = read.zoo(PC2_df, index='index')
### Mean Functional Curves
z_3 = read.zoo(mean_df, index='index')
autoplot(z_1, facet = NULL, main='Variance on PC1')
PC1_df = data.frame(matrix(nrow=80))
PC2_df = data.frame(matrix(nrow=80))
mean_df = data.frame(matrix(nrow=80))
for(node in 1:32){
node.df = node.scaler(patient5, node, k=32)
node.df = as.matrix(row.check(node.df))
rotpcalist = fPCA.nodes(data_mat=node.df, k=11, nharm=2, plt=0)
# PC1 & PC2
harmfd <- rotpcalist[[1]]
basisfd <- harmfd$basis
rangex <- basisfd$rangeval
x <- seq(rangex[1], rangex[2], length = harmfd$basis$rangeval[2])
meanmat <- eval.fd(x, rotpcalist$meanfd)
fdmat <- eval.fd(x, harmfd)
fac1 <- sqrt(rotpcalist$values[1])
fac2 <- sqrt(rotpcalist$values[2])
PC1_df[,ncol(PC1_df)+1]=2*fac1*fdmat[,1]
PC2_df[,ncol(PC2_df)+1]=2*fac2*fdmat[,2]
mean_df[,ncol(mean_df)+1]=meanmat
}
PC1_df = data.frame(PC1_df[,2:(ncol(PC1_df))])
names(PC1_df)=colnames(patient1)
PC2_df = data.frame(PC2_df[,2:(ncol(PC2_df))])
names(PC2_df)=colnames(patient1)
mean_df = data.frame(mean_df[,2:(ncol(mean_df))])
names(mean_df)=colnames(patient1)
## plot
### PC1
z_1 = read.zoo(PC1_df, index='index')
#########
#### plot fPCA on variance along PC1 ######
fPCA.nodes(as.matrix(PC1_df), k=11, 2, 1)
#######
##### Plot variance on all nodes for one patient
PC1_df = data.frame(matrix(nrow=80))
PC2_df = data.frame(matrix(nrow=80))
mean_df = data.frame(matrix(nrow=80))
for(node in 1:32){
node.df = node.scaler(patient5, node, k=32)
node.df = as.matrix(row.check(node.df))
rotpcalist = fPCA.nodes(data_mat=node.df, k=11, nharm=2, plt=0)
# PC1 & PC2
harmfd <- rotpcalist[[1]]
basisfd <- harmfd$basis
rangex <- basisfd$rangeval
x <- seq(rangex[1], rangex[2], length = harmfd$basis$rangeval[2])
meanmat <- eval.fd(x, rotpcalist$meanfd)
fdmat <- eval.fd(x, harmfd)
fac1 <- sqrt(rotpcalist$values[1])
fac2 <- sqrt(rotpcalist$values[2])
PC1_df[,ncol(PC1_df)+1]=2*fac1*fdmat[,1]
PC2_df[,ncol(PC2_df)+1]=2*fac2*fdmat[,2]
mean_df[,ncol(mean_df)+1]=meanmat
}
PC1_df = data.frame(PC1_df[,2:(ncol(PC1_df))])
names(PC1_df)=colnames(patient1)
PC2_df = data.frame(PC2_df[,2:(ncol(PC2_df))])
names(PC2_df)=colnames(patient1)
mean_df = data.frame(mean_df[,2:(ncol(mean_df))])
names(mean_df)=colnames(patient1)
## plot
### PC1
z_1 = read.zoo(PC1_df, index='index')
### PC2
z_2 = read.zoo(PC2_df, index='index')
### Mean Functional Curves
z_3 = read.zoo(mean_df, index='index')
autoplot(z_1, facet = NULL, main='Patients 80, variance of all nodes on PC1')
autoplot(z_1, facet = NULL, main='Patients 80, variance of all nodes on PC1')
autoplot(z_1, facet = NULL, main='Patients 80, variance of all nodes on PC1')
autoplot(z_2, facet = NULL, main='Patients 80, variance of all nodes on PC2')
autoplot(z_3, facet = NULL, main='Patients 80, mean curves')
#########
#### plot fPCA on variance along PC1 ######
fPCA.nodes(as.matrix(PC1_df), k=11, 2, 1)
######
autoplot(z_1, facet = NULL, main='Patients 80, variance of all nodes on PC1')
