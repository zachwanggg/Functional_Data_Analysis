length(idx)
result_obj <- f_fourier_smooth(time_subset=c(1:600),data_mat
,node_subset=c(5), k=50)
smoothed_curve = eval.fd(c(1:600),result_obj$fd)
plot(smoothed_curve)
### revised after here
x=diff(ifelse(smoothed_curve>0,1,0)) #crossed 0---> -1: pos to neg,    1: neg to pos
idx=(1:599)[x!=0]   # returns location index where curve crosses X-axis (zero point)
length(idx)
View(data_15may2020)
plot(smoothed_curve)
smoothed_curve = eval.fd(c(1:600),result_obj$fd)
result_obj <- f_fourier_smooth(time_subset=c(1:600),data_mat
,node_subset=c(1), k=50)
mod(3)
3%2
mod(3,2)
install.packages("pracma")
library(pracma)
mod(length(idx),3)
mod(2,1)
mod(1,2)
mod(2,5)
mod(2,6)
6/2
6/4
idivide(length(idx),3)
N=idivide(length(idx),3)
for (i in 1:N){
print(z_idx[i])
}
z_idx=(1:599)[x!=0]   # returns location index where curve crosses X-axis (zero point)
for (i in 1:N){
print(z_idx[i])
}
}
for (i in 1:N){
print(z_idx[i])
}
z
z_idx
N=idivide(length(idx),3)
i=1
while (i<=N){
print(z_idx[i], z_idx[i+1], z_idx[i+2])
i=i+3
}
i
print(z_idx[i], z_idx[i+1], z_idx[i+2])
print(z_idx[i])
print(z_idx[i+1])
print(paste(z_idx[i], z_idx[i+1], z_idx[i+2]))
while (i<=N){
print(paste(z_idx[i], z_idx[i+1], z_idx[i+2]))
i=i+3
}
n
N
N=idivide(length(idx),3)*3
i=1
while (i<=N){
print(paste(z_idx[i], z_idx[i+1], z_idx[i+2]))
i=i+3
}
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
tmp=data.frame(cycle=1, time=z_idx[1:3])
View(tmp)
smoothed_curve
smoothed_curve[1:100]
View(tmp)
tmp=data.frame(cycle=1, time=z_idx[1:3], y_value=smoothed_curve[z_idx[1]:z_idx[3]])
tmp=data.frame(cycle=1, time=z_idx[1:3], y_value=smoothed_curve[z_idx[1]:z_idx[3]])
smoothed_curve[z_idx[1]:z_idx[3]]
range(2,7)
seq(2,7)
tmp=data.frame(cycle=1, time=seq(z_idx[1],z_idx[3]), y_value=smoothed_curve[z_idx[1]:z_idx[3]])
View(tmp)
View(tmp)
smoothed_curve = eval.fd(c(1:600),result_obj$fd)
plot(smoothed_curve)
x=diff(ifelse(smoothed_curve>0,1,0)) #crossed 0---> -1: pos to neg,    1: neg to pos
z_idx=(1:599)[x!=0]   # returns location index where curve crosses X-axis (zero point)
length(idx)
N=idivide(length(idx),3)*3
i=1
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
#print(paste(z_idx[i], z_idx[i+1], z_idx[i+2]))
tmp=data.frame(cycle=1, time=seq(z_idx[i],z_idx[i+2]), y_value=smoothed_curve[z_idx[i]:z_idx[i+2]])
result=rbind(result,tmp)
i=i+3
}
i
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
#print(paste(z_idx[i], z_idx[i+1], z_idx[i+2]))
tmp=data.frame(cycle=1, time=seq(z_idx[i],z_idx[i+2]), y_value=smoothed_curve[z_idx[i]:z_idx[i+2]])
result=rbind(result,tmp)
i=i+3
}
View(result)
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
View(result)
tmp=data.frame(cycle=1, time=seq(z_idx[1],z_idx[1+2]), y_value=smoothed_curve[z_idx[1]:z_idx[1+2]])
View(tmp)
result=rbind(result,tmp)
View(result)
tmp=data.frame(cycle=1, time=seq(z_idx[4],z_idx[4+2]), y_value=smoothed_curve[z_idx[4]:z_idx[4+2]])
View(tmp)
tmp=data.frame(cycle=2, time=seq(z_idx[4],z_idx[4+2]), y_value=smoothed_curve[z_idx[4]:z_idx[4+2]])
result=rbind(result,tmp)
View(result)
N=idivide(length(idx),3)
i=1
while (i<=N){
print(paste(z_idx[1+(i-1)*3], z_idx[2+(i-1)*3], z_idx[3+(i-1)*3]))
#tmp=data.frame(cycle=1, time=seq(z_idx[i],z_idx[i+2]), y_value=smoothed_curve[z_idx[i]:z_idx[i+2]])
#result=rbind(result,tmp)
i=i+1
}
length(z_idx)
N=idivide(length(z_idx),3)
i=1
while (i<=N){
print(paste(z_idx[1+(i-1)*3], z_idx[2+(i-1)*3], z_idx[3+(i-1)*3]))
#tmp=data.frame(cycle=1, time=seq(z_idx[i],z_idx[i+2]), y_value=smoothed_curve[z_idx[i]:z_idx[i+2]])
#result=rbind(result,tmp)
i=i+1
}
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
print(paste(z_idx[1+(i-1)*3], z_idx[2+(i-1)*3], z_idx[3+(i-1)*3]))
tmp=data.frame(cycle=1, time=seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
result=rbind(result,tmp)
i=i+1
}
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
print(paste(z_idx[1+(i-1)*3], z_idx[2+(i-1)*3], z_idx[3+(i-1)*3]))
tmp=data.frame(cycle=i, time=seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
result=rbind(result,tmp)
i=i+1
}
View(result)
View(tmp)
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
print(paste(z_idx[1+(i-1)*3], z_idx[2+(i-1)*3], z_idx[3+(i-1)*3]))
tmp=data.frame(i, seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
result=rbind(result,tmp)
i=i+1
}
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
print(paste(z_idx[1+(i-1)*3], z_idx[2+(i-1)*3], z_idx[3+(i-1)*3]))
tmp=data.frame(i, seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
result=rbind(result,tmp)
i=i+1
}
##put into dataframe
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
i=1
tmp=data.frame(i, seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
result=rbind(result,tmp)
View(result)
i=2
print(paste(z_idx[1+(i-1)*3], z_idx[2+(i-1)*3], z_idx[3+(i-1)*3]))
tmp=data.frame(i, seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
result=rbind(result,tmp)
View(result)
i=3
print(paste(z_idx[1+(i-1)*3], z_idx[2+(i-1)*3], z_idx[3+(i-1)*3]))
tmp=data.frame(i, seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
result=rbind(result,tmp)
n
N
i=9
print(paste(z_idx[1+(i-1)*3], z_idx[2+(i-1)*3], z_idx[3+(i-1)*3]))
tmp=data.frame(i, seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
result=rbind(result,tmp)
i=i+1
print(paste(z_idx[1+(i-1)*3], z_idx[2+(i-1)*3], z_idx[3+(i-1)*3]))
tmp=data.frame(i, seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
result=rbind(result,tmp)
i=i+1
########################
########################
result_obj <- f_fourier_smooth(time_subset=c(1:600),data_mat
,node_subset=c(1), k=50)
smoothed_curve = eval.fd(c(1:600),result_obj$fd)
plot(smoothed_curve)
x=diff(ifelse(smoothed_curve>0,1,0)) #crossed 0---> -1: pos to neg,    1: neg to pos
z_idx=(1:599)[x!=0]   # returns location index where curve crosses X-axis (zero point)
length(z_idx)
##put into dataframe
N=idivide(length(z_idx),3)
i=1
N
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
print(paste(z_idx[1+(i-1)*3], z_idx[2+(i-1)*3], z_idx[3+(i-1)*3]))
tmp=data.frame(cycle=i, time=seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
result=rbind(result,tmp)
i=i+1
}
View(result)
plot(result)
library(ggplot2)
##The values Year, Value, School_ID are
##inherited by the geoms
ggplot(result, aes(time, y_value,colour=cycle)) + geom_line() + geom_point()
i
time=seq(1,length(seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3])))
i=10
time=seq(1,length(seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3])))
time
i=9
time=seq(1,length(seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3])))
time
i=1
time=seq(1,length(seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3])))
time
N=idivide(length(z_idx),3)
i=1
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
print(paste(z_idx[1+(i-1)*3], z_idx[2+(i-1)*3], z_idx[3+(i-1)*3]))
#tmp=data.frame(cycle=i, time=seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
tmp=data.frame(cycle=i, time=seq(1,length(seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]))), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
result=rbind(result,tmp)
i=i+1
}
View(result)
##The values Year, Value, School_ID are
##inherited by the geoms
ggplot(result, aes(time, y_value,colour=cycle)) + geom_line() + geom_point()
plot.periodicCycle=function(dd){
x=diff(ifelse(dd>0,1,0)) #crossed 0---> -1: pos to neg,    1: neg to pos
z_idx=(1:599)[x!=0]   # returns location index where curve crosses X-axis (zero point)
##put into dataframe
N=idivide(length(z_idx),3)
i=1
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
print(paste(z_idx[1+(i-1)*3], z_idx[2+(i-1)*3], z_idx[3+(i-1)*3]))
#tmp=data.frame(cycle=i, time=seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
tmp=data.frame(cycle=i, time=seq(1,length(seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]))), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
result=rbind(result,tmp)
i=i+1
}
ggplot(result, aes(time, y_value,colour=cycle)) + geom_line() + geom_point()
}
plot.periodicCycle(smoothed_curve)
0==1
plot.periodicCycle = function(dd, original){
x=diff(ifelse(dd>0,1,0)) #crossed 0---> -1: pos to neg,    1: neg to pos
z_idx=(1:599)[x!=0]   # returns location index where curve crosses X-axis (zero point)
##put into dataframe
N=idivide(length(z_idx),3)
i=1
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
print(paste(z_idx[1+(i-1)*3], z_idx[2+(i-1)*3], z_idx[3+(i-1)*3]))
if(original==1){
tmp=data.frame(cycle=i, time=seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
else{
tmp=data.frame(cycle=i, time=seq(1,length(seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]))), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
result=rbind(result,tmp)
i=i+1
}
ggplot(result, aes(time, y_value,colour=cycle)) + geom_line() + geom_point()
}
plot.periodicCycle(dd=smoothed_curve, orginal=0)
plot.periodicCycle(dd=smoothed_curve, original=0)
plot.periodicCycle(dd=smoothed_curve, original=1)
plot(smoothed_curve)
plot.periodicCycle(dd=smoothed_curve, original=1)
plot.periodicCycle = function(data, original){
x=diff(ifelse(data>0,1,0))       #crossed 0---> -1: pos to neg,    1: neg to pos
z_idx=(1:599)[x!=0]             #returns: location index where curve crosses X-axis
N=idivide(length(z_idx),3)
i=1
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
print(paste(z_idx[1+(i-1)*3], z_idx[2+(i-1)*3], z_idx[3+(i-1)*3]))
if(original==1){
tmp=data.frame(cycle=i, time=seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
else{
tmp=data.frame(cycle=i, time=seq(1,length(seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]))), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
result=rbind(result,tmp)
i=i+1
}
ggplot(result, aes(time, y_value,colour=cycle)) + geom_line() + geom_point()
}
#result_obj <- f_fourier_smooth(time_subset=c(1:600), data_mat, node_subset = c(1)
#                         ,k=selection_result[which.min(selection_result[,2]),1],
#                         nharm=2)
result_obj <- f_fourier_smooth(time_subset=c(1:600),data_mat
,node_subset=c(1), k=50)
smoothed_curve = eval.fd(c(1:600),result_obj$fd)
plot.periodicCycle(data=smoothed_curve, original=0)
plot.periodicCycle(data=smoothed_curve, original=0)
plot.periodicCycle = function(data, original){
x=diff(ifelse(data>0,1,0))       #crossed 0---> -1: pos to neg,    1: neg to pos
z_idx=(1:599)[x!=0]             #returns: location index where curve crosses X-axis
N=idivide(length(z_idx),3)
i=1
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
if(original==1){
tmp=data.frame(cycle=i, time=seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
else{
tmp=data.frame(cycle=i, time=seq(1,length(seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]))), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
result=rbind(result,tmp)
i=i+1
}
ggplot(result, aes(time, y_value,colour=cycle)) + geom_line() + geom_point()
}
result_obj <- f_fourier_smooth(time_subset=c(1:600), data_mat, node_subset=c(1), k=50)
smoothed_curve = eval.fd(c(1:600),result_obj$fd)
plot.periodicCycle(data=smoothed_curve, original=0)
plot.periodicCycle = function(data, original){
x=diff(ifelse(data>0,1,0))       #crossed 0---> -1: pos to neg,    1: neg to pos
z_idx=(1:599)[x!=0]             #returns: location index where curve crosses X-axis
N=idivide(length(z_idx),3)
i=1
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
if(original==1){
tmp=data.frame(cycle=i, time=seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
else{
tmp=data.frame(cycle=i, time=seq(1,length(seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]))), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
result=rbind(result,tmp)
i=i+1
}
ggplot(result, aes(time, y_value,colour=cycle)) + geom_line()
}
result_obj <- f_fourier_smooth(time_subset=c(1:600), data_mat, node_subset=c(1), k=50)
smoothed_curve = eval.fd(c(1:600),result_obj$fd)
plot.periodicCycle(data=smoothed_curve, original=0)
plot.periodicCycle = function(data, original){
x=diff(ifelse(data>0,1,0))       #crossed 0---> -1: pos to neg,    1: neg to pos
z_idx=(1:599)[x!=0]             #returns: location index where curve crosses X-axis
N=idivide(length(z_idx),3)
i=1
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
if(original==1){
tmp=data.frame(cycle=i, time=seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
else{
tmp=data.frame(cycle=i, time=seq(1,length(seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]))), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
result=rbind(result,tmp)
i=i+1
}
ggplot(result, aes(time, y_value,colour=cycle)) + geom_line() +geom_segment()
}
plot.periodicCycle(data=smoothed_curve, original=0)
plot.periodicCycle = function(data, original){
x=diff(ifelse(data>0,1,0))       #crossed 0---> -1: pos to neg,    1: neg to pos
z_idx=(1:599)[x!=0]             #returns: location index where curve crosses X-axis
N=idivide(length(z_idx),3)
i=1
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
if(original==1){
tmp=data.frame(cycle=i, time=seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
else{
tmp=data.frame(cycle=i, time=seq(1,length(seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]))), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
result=rbind(result,tmp)
i=i+1
}
ggplot(result, aes(time, y_value,group=cycle, colour=cycle)) + geom_line() +geom_segment()
}
plot.periodicCycle(data=smoothed_curve, original=0)
plot.periodicCycle = function(data, original){
x=diff(ifelse(data>0,1,0))       #crossed 0---> -1: pos to neg,    1: neg to pos
z_idx=(1:599)[x!=0]             #returns: location index where curve crosses X-axis
N=idivide(length(z_idx),3)
i=1
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
if(original==1){
tmp=data.frame(cycle=i, time=seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
else{
tmp=data.frame(cycle=i, time=seq(1,length(seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]))), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
result=rbind(result,tmp)
i=i+1
}
ggplot(result, aes(time, y_value,group=cycle, colour=cycle)) + geom_line()
}
plot.periodicCycle(data=smoothed_curve, original=0)
plot.periodicCycle = function(data, original){
x=diff(ifelse(data>0,1,0))       #crossed 0---> -1: pos to neg,    1: neg to pos
z_idx=(1:599)[x!=0]             #returns: location index where curve crosses X-axis
N=idivide(length(z_idx),3)
i=1
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
if(original==1){
tmp=data.frame(cycle=i, time=seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
else{
tmp=data.frame(cycle=i, time=seq(1,length(seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]))), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
result=rbind(result,tmp)
i=i+1
}
ggplot(result, aes(time, y_value,group=cycle, colour=cycle)) + geom_line() + geom_point(aes(color=cycle))+
theme(legend.position="top")
}
plot.periodicCycle(data=smoothed_curve, original=0)
plot.periodicCycle = function(data, original){
x=diff(ifelse(data>0,1,0))       #crossed 0---> -1: pos to neg,    1: neg to pos
z_idx=(1:599)[x!=0]             #returns: location index where curve crosses X-axis
N=idivide(length(z_idx),3)
i=1
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
if(original==1){
tmp=data.frame(cycle=i, time=seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
else{
tmp=data.frame(cycle=i, time=seq(1,length(seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]))), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
result=rbind(result,tmp)
i=i+1
}
ggplot(result, aes(time, y_value,group=cycle, colour=cycle)) + geom_line() + theme(legend.position="top")
}
plot.periodicCycle(data=smoothed_curve, original=0)
plot.periodicCycle(data=smoothed_curve, original=1)
plot.periodicCycle = function(data, original){
x=diff(ifelse(data>0,1,0))       #crossed 0---> -1: pos to neg,    1: neg to pos
z_idx=(1:599)[x!=0]             #returns: location index where curve crosses X-axis
N=idivide(length(z_idx),3)
i=1
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
if(original==1){
tmp=data.frame(cycle=i, time=seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
else{
tmp=data.frame(cycle=i, time=seq(1,length(seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]))), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
result=rbind(result,tmp)
i=i+1
}
ggplot(result, aes(time, y_value,group=cycle, colour=cycle)) + geom_line() + theme(legend.position="top")
}
#result_obj <- f_fourier_smooth(time_subset=c(1:600), data_mat, node_subset = c(1)
#                         ,k=selection_result[which.min(selection_result[,2]),1],
#                         nharm=2)
result_obj <- f_fourier_smooth(time_subset=c(1:600), data_mat, node_subset=c(1), k=50)
smoothed_curve = eval.fd(c(1:600),result_obj$fd)
plot.periodicCycle(data=smoothed_curve, original=1)
plot.periodicCycle(data=smoothed_curve, original=1)
result_obj <- f_fourier_smooth(time_subset=c(1:600), data_mat, node_subset=c(2), k=50)
smoothed_curve = eval.fd(c(1:600),result_obj$fd)
plot.periodicCycle(data=smoothed_curve, original=1)
result_obj <- f_fourier_smooth(time_subset=c(1:600), data_mat, node_subset = c(1)
,k=selection_result[which.min(selection_result[,2]),1],
nharm=2)
result_obj <- f_fourier_smooth(time_subset=c(1:600), data_mat, node_subset = c(1)
,k=selection_result[which.min(selection_result[,2]),1])
#result_obj <- f_fourier_smooth(time_subset=c(1:600), data_mat, node_subset=c(1), k=50)
smoothed_curve = eval.fd(c(1:600),result_obj$fd)
plot.periodicCycle(data=smoothed_curve, original=0)
plot.periodicCycle(data=smoothed_curve, original=1)
plot.periodicCycle(data=smoothed_curve, original=0)
result_obj <- f_fourier_smooth(time_subset=c(1:600), data_mat, node_subset=c(1), k=32)
smoothed_curve = eval.fd(c(1:600),result_obj$fd)
plot.periodicCycle(data=smoothed_curve, original=0)
plot.periodicCycle(data=smoothed_curve, original=1)
plot(data_mat[,1], type='l')
lines(smooth.spline(1:600, data_mat[,1]), col='red', lwd=2)
plot(data_mat[,1], type='l')
lines(smooth.spline(1:600, data_mat[,1]), col='red', lwd=2)
library(ggplot)
plot.periodicCycle = function(data, original){
x=diff(ifelse(data>0,1,0))       #crossed 0---> -1: pos to neg,    1: neg to pos
z_idx=(1:599)[x!=0]             #returns: location index where curve crosses X-axis
N=idivide(length(z_idx),3)
i=1
result=data.frame(cycle=integer(), time=integer(), y_value=integer())
while (i<=N){
if(original==1){
tmp=data.frame(cycle=i, time=seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
else{
tmp=data.frame(cycle=i, time=seq(1,length(seq(z_idx[1+(i-1)*3],z_idx[3+(i-1)*3]))), y_value=smoothed_curve[z_idx[1+(i-1)*3]:z_idx[3+(i-1)*3]])
}
result=rbind(result,tmp)
i=i+1
}
ggplot(result, aes(time, y_value,group=cycle, colour=cycle)) + geom_line() + theme(legend.position="top")
}
library(ggplot)
plot.periodicCycle(data=smoothed_curve, original=1)
